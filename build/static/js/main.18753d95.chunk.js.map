{"version":3,"sources":["store/index.js","assets/images/logo.svg","pages/home/index.js","pages/practice/component/practiceItem.js","lib/http.js","lib/api.js","pages/practice/index.js","pages/book/index.js","pages/bookDetail/index.js","router/index.js","index.js"],"names":["enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","Index","message","type","style","marginBottom","fontSize","textAlign","onPanelChange","value","mode","console","log","format","React","Component","practiceItem","props","state","nextProps","nextState","content","this","className","name","author","publish","price","pages","onClick","delItem","defaultProps","url","data","contentType","timeout","resType","Promise","resolve","reject","requestConfig","method","headers","responseType","toUpperCase","params","paramsSerializer","qs","stringify","indices","JSON","axios","then","resp","catch","err","articleAdd","http","layout","labelCol","span","wrapperCol","tailLayout","offset","Practice","list","initialValues","remember","ref","onFinish","values","onAdd","onFinishFailed","Item","label","rules","required","TextArea","rows","htmlType","TransitionGroup","map","item","index","CSSTransition","unmountOnExit","appear","push","getAdd","setState","refs","form","resetFields","res","status","success","setTimeout","history","errorInfo","splice","Search","Input","onSearch","dataSource","current","size","total","loading","showQuickJumper","isModalVisible","setIsModalVisible","columns","title","dataIndex","key","render","_","record","handleDetail","id","handleEdit","okText","cancelText","onConfirm","handleDelete","placeholder","allowClear","enterButton","handleAdd","rowKey","bordered","pagination","fenye","visible","onOk","handleOk","onCancel","handleCancel","onChange","nameChange","event","authorChange","publishChange","priceChange","getBook","pageSize","onShowSizeChange","Current","a","length","totalElements","getBookDeletel","articleDelete","warning","pathname","articleUpdate","target","getBookUpdate","bookDetail","description","marginTop","location","getBookDetail","articleDetail","AppRouter","routeConfig","path","exact","component","Home","Book","BookDetail","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.18753d95.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\n// compose增强函数====这里用于谷歌调试插件redux-dev\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\n\nconst enhancers = composeEnhancers(applyMiddleware(thunk))\n\n\nconst store = createStore(\n  enhancers\n)\n\nexport default store","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../../assets/images/logo.svg\";\nimport \"./index.css\";\nimport React from \"react\";\nimport { Calendar, Alert } from \"antd\";\n\nclass Index extends React.Component {\n  // 类名  继承  react组件\n  render() {\n    return (\n      <div>\n        <Alert message=\"日历\" type=\"success\" style={{marginBottom:20, fontSize: 22, textAlign:'center'}}/>\n        <Calendar onPanelChange={()=>this.onPanelChange} />\n      </div>\n    );\n  }\n  onPanelChange(value, mode) {\n    console.log(value.format(\"YYYY-MM-DD\"), mode);\n  }\n}\n\nexport default Index;\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Button } from \"antd\";\nclass practiceItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // 组件第一次存在dom中时候函数不会执行\n  // 如果已经存在dom中或者dom发生变化时候，函数才会执行\n  // 类似vue中的子组件，在更新数据的时候才会执行（个人理解）\n  // componentWillReceiveProps () {\n  //   console.log('child-componentWillReceiveProps-----')\n  // }\n\n  // // 删除dom的时候会执行\n  // componentWillUnmount () {\n  //   console.log('child-componentWillUnmount-----')\n  // }\n\n  // 解决性能问题，子组件会一直渲染。需要调节判定\n  shouldComponentUpdate(nextProps, nextState) {\n    // console.log('shouldComponentUpdate-----组件更新之前  1')\n    if (nextProps.content !== this.props.content) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <li className=\"li\">\n        {this.props.content.name} - {this.props.content.author} - {this.props.content.publish} - {this.props.content.price} - {this.props.pages}\n        <Button\n          className=\"delete\"\n          value=\"small\"\n          type=\"danger\"\n          onClick={() => {\n            this.props.delItem();\n          }}\n        >\n          删除\n        </Button>\n      </li>\n    );\n  }\n}\n\n// 参数默认值\npracticeItem.defaultProps = {\n  pages: 100,\n};\n\n// 校验参数和是否必须\npracticeItem.propTypes = {\n  name: propTypes.string.isRequired,\n  content: propTypes.object,\n  index: propTypes.number,\n  delItem: propTypes.func,\n};\n\nexport default practiceItem;\n","import axios from 'axios'\nimport qs from 'qs'\n\n\nexport default (url = '', data = {}, type = 'GET', contentType, timeout, resType) => {\n  return new Promise((resolve, reject) => {\n    let requestConfig = {\n      method: type,\n      url: url,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': contentType ? contentType : 'application/json'\n      },\n      timeout: timeout ? timeout : 180000,\n      responseType: resType ? resType : 'json',\n    };\n\n    switch (type.toUpperCase()) {\n      case \"GET\":\n        requestConfig.params = data;\n        requestConfig.paramsSerializer = params => {\n          return qs.stringify(params, {\n            indices: false\n          })\n        };\n        break;\n      case \"DELETE\":\n        requestConfig.params = data;\n        break;\n      case \"POST\":\n        requestConfig.data = data;\n        break;\n      case \"PUT\":\n        requestConfig.data = data;\n        break;\n      default:\n        requestConfig.data = data;\n    }\n\n    if ((type === 'POST' || type === 'PUT') && contentType !== 'multipart/form-data') {\n      requestConfig.data = contentType ? qs.stringify(data) : JSON.stringify(data);\n    }\n\n    axios(requestConfig).then((resp) => {\n      if (resp) {\n        resolve(resp);\n      } else {\n        return\n      }\n    }).catch((err) => {\n      reject(err);\n    })\n  });\n}","import http from './http'\n\nexport let urlPrefix = '/oa'\n\n// let url = \"http://localhost:8181\"\nlet url = \"http://39.103.176.82:8181\"\n// export const articleList = (data) => http(`${urlPrefix}/articleList`, data, 'POST') // 查询文章列表\n\nexport const articleList = (data) => http(`${url}/book/findAll/${data.current}/${data.size}`, {}, 'GET') // 查询文章列表\nexport const articleAdd = (data) => http(`${url}/book/save`, data, 'POST') // 新增文章列表\nexport const articleDetail = (id) => http(`${url}/book/findById/${id}`, {}, 'GET') // 新增文章列表\nexport const articleUpdate = (data) => http(`${url}/book/update`, data, 'PUT') // 修改文章列表\nexport const articleDelete = (id) => http(`${url}/book/deleteById/${id}`, {}, 'DELETE') // 删除文章列表","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./index.scss\";\nimport PracticeItem from \"./component/practiceItem\";\nimport { articleAdd } from \"../../lib/api\";\n\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Form, Input, Button, message } from \"antd\";\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 2,\n    span: 16,\n  },\n};\n\nclass Practice extends Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n    this.state = {\n      list: [],\n    };\n  }\n\n  // componentWillMount () {\n  //   console.log('componentWillMount-----组件将要挂载到页面的时候')\n  // }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   console.log('shouldComponentUpdate-----组件更新之前  1')\n  //   return true\n  // }\n\n  // componentWillUpdate () {\n  //   console.log('componentWillUpdate-----组件更新之前  2')\n  // }\n\n  render() {\n    return (\n      <Fragment>\n        {/* 外层类似vue必须加一层盒子，但是加了这个就可以不用增加额外盒子 */}\n        {/* 绑定事件必须要.bind(this)进去，或者使用箭头函数，不然无法找到this */}\n        <div>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{\n              remember: true,\n            }}\n            ref=\"form\"\n            onFinish={(values) => this.onAdd(values)}\n            onFinishFailed={this.onFinishFailed}\n          >\n            <Form.Item\n              label=\"书名\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"请输入用户名\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"作者\"\n              name=\"author\"\n              rules={[\n                {\n                  required: true,\n                  message: \"请输入作者\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"出版社\"\n              name=\"publish\"\n              rules={[\n                {\n                  required: true,\n                  message: \"请输入出版社\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"价格\"\n              name=\"price\"\n              rules={[\n                {\n\n                  required: true,\n                  message: \"请输入价格\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"content\" label=\"内容\">\n              <Input.TextArea rows={10} />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                新增\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n        <ul>\n          <TransitionGroup>\n            {this.state.list.map((item, index) => {\n              return (\n                <CSSTransition timeout={10} unmountOnExit appear={true} key={index}>\n                  <PracticeItem\n                    key={index}\n                    content={item}\n                    index={index}\n                    delItem={() => {\n                      this.delItem(index);\n                    }}\n                  />\n                </CSSTransition>\n              );\n            })}\n          </TransitionGroup>\n        </ul>\n      </Fragment>\n    );\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate-----所有挂载完毕执行   4\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n  }\n  //新增\n  onAdd(values) {\n    this.state.list.push(values);\n    this.getAdd(values);\n    this.setState({\n      list: this.state.list,\n    });\n    if (values) {\n      this.refs.form.resetFields();\n    }\n  }\n  getAdd(data) {\n    articleAdd(data).then((res) => {\n      if (res.status == 200) {\n        message.success(\"新增成功\");\n        setTimeout(() => {\n          this.props.history.push(\"/book\");\n        }, 1000);\n      }\n    });\n  }\n  onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  }\n  //删除\n  delItem(index) {\n    // 数据操作必须重新赋值操作，不能直接改变state里面的数据\n    let list = this.state.list;\n    list.splice(index, 1);\n    this.setState({\n      list: list,\n    });\n  }\n}\n\nexport default Practice;\n","import \"./index.css\";\nimport React from \"react\";\nimport { articleList, articleAdd, articleUpdate, articleDelete } from \"../../lib/api\";\nimport { Table, Input, Modal, Popconfirm, Row, Col, Button, message } from \"antd\";\nconst { Search } = Input;\n\nconst onSearch = (value) => {\n  console.log(value);\n};\nclass Index extends React.Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n    this.state = {\n      dataSource: [],\n      current: 1, // 当前页\n      size: 10, // 每页显示\n      total: 0, // 总条数\n      loading: false,\n      showQuickJumper: true, //是否点击跳转\n      isModalVisible: false,\n      setIsModalVisible: false,\n      columns: [\n        {\n          title: \"ID\",\n          dataIndex: \"id\",\n          key: \"id\",\n        },\n        {\n          title: \"书名\",\n          dataIndex: \"name\",\n          key: \"name\",\n          render: (_, record) => (\n            <div>\n              <span className=\"edit\" onClick={() => this.handleDetail(record.id)}>\n                <a>{record.name}</a>\n              </span>\n            </div>\n          ),\n        },\n        {\n          title: \"作者\",\n          dataIndex: \"author\",\n          key: \"author\",\n        },\n        {\n          title: \"出版社\",\n          dataIndex: \"publish\",\n          key: \"publish\",\n        },\n        {\n          title: \"价格\",\n          dataIndex: \"price\",\n          key: \"price\",\n        },\n        {\n          title: \"操作\",\n          dataIndex: \"operation\",\n          render: (_, record) => (\n            <div>\n              <span className=\"edit\" onClick={() => this.handleEdit(record)}>\n                <a>编辑</a>\n              </span>\n              <Popconfirm title=\"确定删除吗?\" okText=\"确认\" cancelText=\"取消\" onConfirm={() => this.handleDelete(record.id)}>\n                <a>删除</a>\n              </Popconfirm>\n            </div>\n          ),\n        },\n      ],\n      //编辑\n      id: \"\",\n      name: \"\",\n      author: \"\",\n      publish: \"\",\n      price: \"\",\n      //公共\n      title: \"新增\",\n    };\n  }\n  render() {\n    return (\n      <div>\n        {/* 表头 */}\n        <div className=\"search\">\n          <Search placeholder=\"请输入书名\" allowClear enterButton=\"搜索\" onSearch={onSearch} />\n          <Button className=\"btn\" type=\"primary\" onClick={() => this.handleAdd()}>\n            新增\n          </Button>\n        </div>\n        <Table rowKey=\"id\" loading={this.state.loading} bordered dataSource={this.state.dataSource} columns={this.state.columns} pagination={this.fenye()} />\n\n        <Modal okText=\"确认\" cancelText=\"取消\" title={this.state.title} visible={this.state.isModalVisible} onOk={() => this.handleOk()} onCancel={() => this.handleCancel()}>\n          <Row className=\"row\">\n            <Col span={4}>书名</Col>\n            <Col span={16}>\n              <Input placeholder=\"书名\" value={this.state.name} onChange={() => this.nameChange(event)} />\n            </Col>\n          </Row>\n          <Row className=\"row\">\n            <Col span={4}>作者</Col>\n            <Col span={16}>\n              <Input placeholder=\"作者\" value={this.state.author} onChange={() => this.authorChange(event)} />\n            </Col>\n          </Row>\n          <Row className=\"row\">\n            <Col span={4}>出版社</Col>\n            <Col span={16}>\n              <Input placeholder=\"出版社\" value={this.state.publish} onChange={() => this.publishChange(event)} />\n            </Col>\n          </Row>\n          <Row className=\"row\">\n            <Col span={4}>价格</Col>\n            <Col span={16}>\n              <Input placeholder=\"价格\" value={this.state.price} onChange={() => this.priceChange(event)} />\n            </Col>\n          </Row>\n        </Modal>\n      </div>\n    );\n  }\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n    this.getBook(this.state.current, this.state.size); //获取列表接口\n  }\n  //分页\n  fenye() {\n    const fy = {\n      current: this.state.current, // 当前页\n      pageSize: this.state.size, // 每页显示\n      total: this.state.total, // 总条数\n      onChange: (current) => {\n        // 点击下一页\n        this.setState({\n          current: current,\n        });\n        this.getBook(current, 10);\n      },\n      // 每页显示变化\n      onShowSizeChange: (Current, pageSize) => {\n        console.log(pageSize);\n        this.getBook(Current, pageSize);\n      },\n      showQuickJumper: this.state.showQuickJumper, //是否可以跳转\n    };\n    return fy;\n  }\n  //列表接口\n  async getBook(current, size) {\n    this.setState({ loading: true });\n    let res = await articleList({ current: current, size: size });\n    console.log(\"列表\", res.data.content);\n    if (res.data.content.length) {\n      this.setState({\n        loading: false,\n        dataSource: res.data.content,\n        total: res.data.totalElements,\n      });\n    }\n  }\n  /**\n   * 删除模块\n   */\n  handleDelete(key) {\n    this.getBookDeletel(key);\n  }\n  //删除接口\n  getBookDeletel(id) {\n    articleDelete(id).then((res) => {\n      if (res.status == 200) {\n        message.warning(\"删除成功\");\n        this.getBook(this.state.current, this.state.size); //获取列表接口\n      }\n    });\n  }\n  /**\n   * 新增模块\n   */\n  handleAdd() {\n    this.setState({\n      isModalVisible: true,\n      title: \"新增\",\n    });\n  }\n  //新增接口\n  getAdd(data) {\n    articleAdd(data).then((res) => {\n      if (res.status == 200) {\n        message.success(\"新增成功\");\n        this.getBook(this.state.current, this.state.size); //获取列表接口\n      }\n    });\n  }\n  /**\n   * 详情模块\n   */\n  handleDetail(id) {\n    this.props.history.push({ pathname: `/bookDetail`, state: { id: id } });\n  }\n  /**\n   * 编辑模块\n   */\n  handleEdit(key) {\n    this.setState({\n      isModalVisible: true,\n      title: \"编辑\",\n      id: key.id,\n      name: key.name,\n      author: key.author,\n      publish: key.publish,\n      price: key.price,\n    });\n  }\n  /**\n   * 弹出框模块\n   */\n  getBookUpdate(data) {\n    articleUpdate(data).then((res) => {\n      if (res.status == 200) {\n        message.success(\"修改成功\");\n        this.getBook(this.state.current, this.state.size); //获取列表接口\n      }\n    });\n  }\n  nameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n  authorChange(event) {\n    this.setState({ author: event.target.value });\n  }\n  publishChange(event) {\n    this.setState({ publish: event.target.value });\n  }\n  priceChange(event) {\n    this.setState({ price: event.target.value });\n  }\n  //弹出框确定\n  handleOk() {\n    this.setState({\n      isModalVisible: false,\n    });\n    if (this.state.id) {\n      let data = {\n        id: this.state.id,\n        name: this.state.name,\n        author: this.state.author,\n        publish: this.state.publish,\n        price: this.state.price,\n      };\n      this.getBookUpdate(data);\n    } else {\n      let data = {\n        name: this.state.name,\n        author: this.state.author,\n        publish: this.state.publish,\n        price: this.state.price,\n      };\n      this.getAdd(data);\n    }\n  }\n  //弹出框取消\n  handleCancel() {\n    this.setState({\n      isModalVisible: false,\n      id: \"\",\n      name: \"\",\n      author: \"\",\n      publish: \"\",\n      price: \"\",\n    });\n  }\n}\n\nexport default Index;\n","import \"./index.css\";\nimport React from \"react\";\nimport { articleDetail } from \"../../lib/api\";\nimport { Alert, Card } from \"antd\";\n\nclass Index extends React.Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookDetail: {\n        name: \"\",\n        author: \"\",\n        publish: \"\",\n        price: \"\",\n      },\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Alert message=\"书名：\" description={this.state.bookDetail.name} type=\"success\" />\n        <Card title=\"详情信息\" style={{ marginTop: 20 }}>\n          <p>书名： {this.state.bookDetail.name}</p>\n          <p>作者： {this.state.bookDetail.author}</p>\n          <p>出版社： {this.state.bookDetail.publish}</p>\n          <p>价格： {this.state.bookDetail.price}</p>\n        </Card>\n        <Card title=\"文章内容\" style={{ marginTop: 20 }}>\n          <p> {this.state.bookDetail.content}</p>\n        </Card>\n      </div>\n    );\n  }\n  componentWillMount() {}\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");    \n    if (this.props.location.state) {\n      let id = this.props.location.state.id;\n      this.getBookDetail(id);\n    }\n  }\n  getBookDetail(id) {\n    articleDetail(id).then((res) => {\n      let data = res.data;\n      if (typeof data == \"object\") {\n        this.setState({\n          bookDetail: data,\n        });\n      }\n    });\n  }\n}\n\nexport default Index;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport './index.scss'\nimport Home from '../pages/home'\nimport Practice from '../pages/practice'\nimport Book from '../pages/book'\nimport BookDetail from '../pages/bookDetail'\n\nconst AppRouter = () => {\n  let routeConfig = [\n    { title: '首页', path: '/', exact: true, component: Home },\n    { title: '练习', path: '/practice', exact: true, component: Practice },\n    { title: '书籍列表', path: '/book', exact: true, component: Book },\n    { title: '书籍详情', path: '/bookDetail', exact: true, component: BookDetail },\n  ]\n  return (\n    <Router>\n      <div className=\"layout\">\n        <div className=\"sideBar\">\n          <ul>\n            {\n              routeConfig.map((item, index) => {\n                return (<li key={index}><Link to={item.path}>{item.title}</Link></li>)\n              })\n            }\n          </ul>\n        </div>\n        <div className=\"main-box\">\n          <div className=\"header\">头部</div>\n          <div className=\"main-content\">\n            {/* exact精准匹配 */}\n            {\n              routeConfig.map((item, index) => {\n                return (<Route key={index} path={item.path} exact={item.exact} component={item.component} />)\n              })\n            }\n          </div>\n        </div>\n      </div>\n    </Router>\n  )\n}\nexport default AppRouter\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './assets/css/reset.scss'  // 基本全局样式\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nimport AppRputer from './router'\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppRputer/>\n  </Provider>, // 组件\n  document.getElementById('root') //挂载在哪里\n);\n"],"sourceRoot":""}