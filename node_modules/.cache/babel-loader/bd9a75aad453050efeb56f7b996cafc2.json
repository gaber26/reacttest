{"ast":null,"code":"var _jsxFileName = \"/Users/gaber/Documents/\\u7EC3\\u4E60/react-demo/src/pages/practice/practiceItem.js\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass XiaojiejieItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // 组件第一次存在dom中时候函数不会执行\n  // 如果已经存在dom中或者dom发生变化时候，函数才会执行\n  // 类似vue中的子组件，在更新数据的时候才会执行（个人理解）\n  // componentWillReceiveProps () {\n  //   console.log('child-componentWillReceiveProps-----')\n  // }\n  // // 删除dom的时候会执行\n  // componentWillUnmount () {\n  //   console.log('child-componentWillUnmount-----')\n  // }\n  // 解决性能问题，子组件会一直渲染。需要调节判定\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // console.log('shouldComponentUpdate-----组件更新之前  1')\n    if (nextProps.content !== this.props.content) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    console.log('child-render');\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => {\n        this.props.delItem();\n      },\n      children: [this.props.content, \" - \", this.props.name, /*#__PURE__*/_jsxDEV(Button, {\n        className: \"delete\",\n        value: \"small\",\n        type: \"warniing\",\n        onClick: () => {\n          delBtn(index);\n        },\n        children: \"\\u5220\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 参数默认值\n\n\nXiaojiejieItem.defaultProps = {\n  name: '小米啊'\n}; // 校验参数和是否必须\n\nXiaojiejieItem.propTypes = {\n  name: propTypes.string.isRequired,\n  content: propTypes.string,\n  index: propTypes.number,\n  delItem: propTypes.func\n};\nexport default XiaojiejieItem;","map":{"version":3,"sources":["/Users/gaber/Documents/练习/react-demo/src/pages/practice/practiceItem.js"],"names":["React","Component","propTypes","Button","XiaojiejieItem","constructor","props","state","shouldComponentUpdate","nextProps","nextState","content","render","console","log","delItem","name","delBtn","index","defaultProps","string","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;;;AACA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGD,GANoC,CAQrC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AACAC,EAAAA,qBAAqB,CAAEC,SAAF,EAAaC,SAAb,EAAwB;AAC3C;AACA,QAAGD,SAAS,CAACE,OAAV,KAAsB,KAAKL,KAAL,CAAWK,OAApC,EAA6C;AAC3C,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,wBACE;AAAI,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKR,KAAL,CAAWS,OAAX;AAAqB,OAAzC;AAAA,iBACG,KAAKT,KAAL,CAAWK,OADd,SAC0B,KAAKL,KAAL,CAAWU,IADrC,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,KAAK,EAAC,OAAjC;AAAyC,QAAA,IAAI,EAAC,UAA9C;AAAyD,QAAA,OAAO,EAAE,MAAI;AAACC,UAAAA,MAAM,CAACC,KAAD,CAAN;AAAc,SAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtCoC,C,CAyCvC;;;AACAd,cAAc,CAACe,YAAf,GAA8B;AAC5BH,EAAAA,IAAI,EAAE;AADsB,CAA9B,C,CAIA;;AACAZ,cAAc,CAACF,SAAf,GAA2B;AACzBc,EAAAA,IAAI,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UADE;AAEzBV,EAAAA,OAAO,EAAET,SAAS,CAACkB,MAFM;AAGzBF,EAAAA,KAAK,EAAEhB,SAAS,CAACoB,MAHQ;AAIzBP,EAAAA,OAAO,EAAEb,SAAS,CAACqB;AAJM,CAA3B;AAOA,eAAenB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Button } from 'antd'\nclass XiaojiejieItem extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  // 组件第一次存在dom中时候函数不会执行\n  // 如果已经存在dom中或者dom发生变化时候，函数才会执行\n  // 类似vue中的子组件，在更新数据的时候才会执行（个人理解）\n  // componentWillReceiveProps () {\n  //   console.log('child-componentWillReceiveProps-----')\n  // }\n\n  // // 删除dom的时候会执行\n  // componentWillUnmount () {\n  //   console.log('child-componentWillUnmount-----')\n  // }\n\n  // 解决性能问题，子组件会一直渲染。需要调节判定\n  shouldComponentUpdate (nextProps, nextState) {\n    // console.log('shouldComponentUpdate-----组件更新之前  1')\n    if(nextProps.content !== this.props.content) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  render() { \n     console.log('child-render')\n    return (\n      <li onClick={() => {this.props.delItem()}} >\n        {this.props.content} - {this.props.name}\n        <Button className=\"delete\" value=\"small\" type=\"warniing\" onClick={()=>{delBtn(index)}}>删除</Button>\n      </li>\n    );\n  }\n}\n\n// 参数默认值\nXiaojiejieItem.defaultProps = {\n  name: '小米啊'\n}\n\n// 校验参数和是否必须\nXiaojiejieItem.propTypes = {\n  name: propTypes.string.isRequired,\n  content: propTypes.string,\n  index: propTypes.number,\n  delItem: propTypes.func\n}\n \nexport default XiaojiejieItem;"]},"metadata":{},"sourceType":"module"}