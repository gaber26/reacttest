{"ast":null,"code":"import { inputValueChangeA, addBtnA, delBtnA, getListA } from './actions';\nimport * as Types from './actionTypes';\nconst defaultState = {\n  inputValue: '请输入',\n  rows: []\n};\nexport default ((state = defaultState, action) => {\n  // reducer只能接受state，不能改变state\n  if (action.type === Types.INPUT_VALUE_CHANGE) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.inputValue = action.value;\n    console.log('====================================');\n    console.log(newState);\n    console.log('====================================');\n    return newState;\n  }\n\n  if (action.type === Types.ADD_BTN) {\n    // let newState = JSON.parse(JSON.stringify(state))\n    console.log('====================================');\n    console.log(444, state);\n    console.log('====================================');\n    newState.rows.push({\n      title: newState.inputValue\n    }); // newState.inputValue = ''\n    // return newState\n  }\n\n  if (action.type === Types.DEL_BTN) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.rows.splice(action.value, 1);\n    return newState;\n  }\n\n  if (action.type === Types.GET_LIST) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.rows = action.rows;\n    return newState;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/gaber/Documents/练习/react-demo/src/store/reducer.js"],"names":["inputValueChangeA","addBtnA","delBtnA","getListA","Types","defaultState","inputValue","rows","state","action","type","INPUT_VALUE_CHANGE","newState","JSON","parse","stringify","value","console","log","ADD_BTN","push","title","DEL_BTN","splice","GET_LIST"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,OAA5B,EAAqCC,OAArC,EAA8CC,QAA9C,QAA8D,WAA9D;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C;AACA,MAAGA,MAAM,CAACC,IAAP,KAAgBN,KAAK,CAACO,kBAAzB,EAA6C;AAC3C,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,KAAf,CAAX,CAAf;AACAI,IAAAA,QAAQ,CAACN,UAAT,GAAsBG,MAAM,CAACO,KAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,WAAON,QAAP;AACD;;AACD,MAAGH,MAAM,CAACC,IAAP,KAAgBN,KAAK,CAACe,OAAzB,EAAkC;AAChC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBV,KAAhB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAN,IAAAA,QAAQ,CAACL,IAAT,CAAca,IAAd,CAAmB;AACjBC,MAAAA,KAAK,EAAET,QAAQ,CAACN;AADC,KAAnB,EALgC,CAQhC;AACA;AACD;;AAED,MAAGG,MAAM,CAACC,IAAP,KAAgBN,KAAK,CAACkB,OAAzB,EAAkC;AAChC,QAAIV,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,KAAf,CAAX,CAAf;AACAI,IAAAA,QAAQ,CAACL,IAAT,CAAcgB,MAAd,CAAqBd,MAAM,CAACO,KAA5B,EAAmC,CAAnC;AACA,WAAOJ,QAAP;AACD;;AAED,MAAGH,MAAM,CAACC,IAAP,KAAgBN,KAAK,CAACoB,QAAzB,EAAmC;AACjC,QAAIZ,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,KAAf,CAAX,CAAf;AACAI,IAAAA,QAAQ,CAACL,IAAT,GAAgBE,MAAM,CAACF,IAAvB;AACA,WAAOK,QAAP;AACD;;AAED,SAAOJ,KAAP;AACD,CAnCD","sourcesContent":["import { inputValueChangeA, addBtnA, delBtnA, getListA } from './actions'\nimport * as Types from './actionTypes'\nconst defaultState = {\n  inputValue: '请输入',\n  rows: []\n}\nexport default (state = defaultState, action) => {\n  // reducer只能接受state，不能改变state\n  if(action.type === Types.INPUT_VALUE_CHANGE) {\n    let newState = JSON.parse(JSON.stringify(state))\n    newState.inputValue = action.value;\n    console.log('====================================');\n    console.log(newState);\n    console.log('====================================');\n    return newState\n  }\n  if(action.type === Types.ADD_BTN) {\n    // let newState = JSON.parse(JSON.stringify(state))\n    console.log('====================================');\n    console.log(444,state);\n    console.log('====================================');\n    newState.rows.push({\n      title: newState.inputValue\n    })\n    // newState.inputValue = ''\n    // return newState\n  }\n\n  if(action.type === Types.DEL_BTN) {\n    let newState = JSON.parse(JSON.stringify(state))\n    newState.rows.splice(action.value, 1)\n    return newState\n  }\n\n  if(action.type === Types.GET_LIST) {\n    let newState = JSON.parse(JSON.stringify(state))\n    newState.rows = action.rows\n    return newState\n  }\n\n  return state\n}"]},"metadata":{},"sourceType":"module"}