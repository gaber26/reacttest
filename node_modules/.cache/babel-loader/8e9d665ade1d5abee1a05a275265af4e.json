{"ast":null,"code":"var _jsxFileName = \"/Users/gaber/Documents/\\u7EC3\\u4E60/react-demo/src/pages/practice/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./index.scss\";\nimport PracticeItem from \"./component/practiceItem\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 2\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 2,\n    span: 8\n  }\n};\n\nconst Demo = state => {\n  console.log('====================================');\n  console.log(state);\n  console.log('====================================');\n\n  const onFinish = values => {\n    console.log('Success:', values, this);\n    this.props.getMsg(values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\u59D3\\u540D\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: '请输入用户名'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\u5E74\\u9F84\",\n      name: \"age\",\n      rules: [{\n        required: true,\n        message: '请输入年龄'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\u5730\\u5740\",\n      name: \"address\",\n      rules: [{\n        required: true,\n        message: '请输入地址'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\u65B0\\u589E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Demo;\n\nclass Practice extends Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n\n    this.handleGetMsg = value => {\n      console.log(value);\n      this.setState({\n        test: value\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      age: \"\",\n      address: \"\",\n      list: [],\n      articleListInfo: []\n    };\n  } // componentWillMount () {\n  //   console.log('componentWillMount-----组件将要挂载到页面的时候')\n  // }\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   console.log('shouldComponentUpdate-----组件更新之前  1')\n  //   return true\n  // }\n  // componentWillUpdate () {\n  //   console.log('componentWillUpdate-----组件更新之前  2')\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Demo, {\n          getMsg: this.handleGetMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: ul => {\n          this.ulDom = ul;\n        },\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          children: this.state.list.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(CSSTransition, {\n              timeout: 10,\n              unmountOnExit: true,\n              appear: true,\n              children: /*#__PURE__*/_jsxDEV(PracticeItem, {\n                content: item,\n                index: index,\n                delItem: () => {\n                  this.delItem(index);\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate-----所有挂载完毕执行   4\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n  }\n\n  //新增\n  addClick() {\n    if (!this.state.name) return;\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      list: [{\n        name: this.state.name,\n        age: this.state.age,\n        address: this.state.address\n      }],\n      name: \"\",\n      age: \"\",\n      address: \"\"\n    }, () => {\n      console.log(this.ulDom.querySelectorAll(\"li\").length);\n    });\n  } //删除\n\n\n  delItem(index) {\n    // 数据操作必须重新赋值操作，不能直接改变state里面的数据\n    let list = this.state.list;\n    list.splice(index, 1);\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      list: list\n    });\n  }\n\n}\n\nexport default Practice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/gaber/Documents/练习/react-demo/src/pages/practice/index.js"],"names":["React","Component","Fragment","PracticeItem","CSSTransition","TransitionGroup","Form","Input","Button","Checkbox","layout","labelCol","span","wrapperCol","tailLayout","offset","Demo","state","console","log","onFinish","values","props","getMsg","onFinishFailed","errorInfo","remember","required","message","Practice","constructor","handleGetMsg","value","setState","test","name","age","address","list","articleListInfo","render","ul","ulDom","map","item","index","delItem","componentDidUpdate","componentDidMount","addClick","querySelectorAll","length","splice"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport \"./index.scss\";\nimport PracticeItem from \"./component/practiceItem\";\n\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 2,\n    span: 8,\n  },\n};\n\nconst Demo = (state) => {\n  console.log('====================================');\n  console.log(state);\n  console.log('====================================');\n  const onFinish = (values) => {\n    console.log('Success:', values, this);\n    this.props.getMsg(values)\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"姓名\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: '请输入用户名',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"年龄\"\n        name=\"age\"\n        rules={[\n          {\n            required: true,\n            message: '请输入年龄',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"地址\"\n        name=\"address\"\n        rules={[\n          {\n            required: true,\n            message: '请输入地址',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          新增\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nclass Practice extends Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n    this.state = {\n      name: \"\",\n      age: \"\",\n      address: \"\",\n      list: [],\n      articleListInfo: [],\n    };\n  }\n\n  // componentWillMount () {\n  //   console.log('componentWillMount-----组件将要挂载到页面的时候')\n  // }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   console.log('shouldComponentUpdate-----组件更新之前  1')\n  //   return true\n  // }\n\n  // componentWillUpdate () {\n  //   console.log('componentWillUpdate-----组件更新之前  2')\n  // }\n\n  render() {\n    return (\n      <Fragment>\n        {/* 外层类似vue必须加一层盒子，但是加了这个就可以不用增加额外盒子 */}\n        {/* 绑定事件必须要.bind(this)进去，或者使用箭头函数，不然无法找到this */}\n        <div>\n          <Demo getMsg={this.handleGetMsg}/>\n          {/* <label htmlFor=\"input\">名字</label>\n          <input\n            id=\"input\"\n            value={this.state.name}\n            onChange={(e) => {\n              this.nameChange(e);\n            }}\n          />\n          <label htmlFor=\"input\">年龄</label>\n          <input\n            id=\"input\"\n            value={this.state.age}\n            onChange={(e) => {\n              this.ageChange(e);\n            }}\n          />\n          <label htmlFor=\"input\">地址</label>\n          <input\n            id=\"input\"\n            value={this.state.address}\n            onChange={(e) => {\n              this.addressChange(e);\n            }}\n          />\n          <Button\n            value=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              this.addClick();\n            }}\n          >\n            增加\n          </Button> */}\n        </div>\n        <ul\n          ref={(ul) => {\n            this.ulDom = ul;\n          }}\n        >\n          <TransitionGroup>\n            {this.state.list.map((item, index) => {\n              return (\n                <CSSTransition timeout={10} unmountOnExit appear={true} key={index}>\n                  <PracticeItem\n                    key={index}\n                    content={item}\n                    index={index}\n                    delItem={() => {\n                      this.delItem(index);\n                    }}\n                  />\n                </CSSTransition>\n              );\n            })}\n          </TransitionGroup>\n        </ul>\n      </Fragment>\n    );\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate-----所有挂载完毕执行   4\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n  }\n  handleGetMsg = (value) => {\n    console.log(value)\n    this.setState({\n      test: value\n    })\n  }\n  //新增\n  addClick() {\n    if (!this.state.name) return;\n    this.setState(\n      {\n        // react单向流，需要绑定原始数据变化\n        list: [{ name: this.state.name, age: this.state.age, address: this.state.address }],\n        name: \"\",\n        age: \"\",\n        address: \"\"\n      },\n      () => {\n        console.log(this.ulDom.querySelectorAll(\"li\").length);\n      }\n    );\n  }\n  //删除\n  delItem(index) {\n    // 数据操作必须重新赋值操作，不能直接改变state里面的数据\n    let list = this.state.list;\n    list.splice(index, 1);\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      list: list,\n    });\n  }\n}\n\nexport default Practice;\n"]},"metadata":{},"sourceType":"module"}