{"ast":null,"code":"import _classCallCheck from\"/Users/gaber/Documents/\\u7EC3\\u4E60/project2/reacttest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gaber/Documents/\\u7EC3\\u4E60/project2/reacttest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/gaber/Documents/\\u7EC3\\u4E60/project2/reacttest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/gaber/Documents/\\u7EC3\\u4E60/project2/reacttest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Button}from\"antd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var practiceItem=/*#__PURE__*/function(_Component){_inherits(practiceItem,_Component);var _super=_createSuper(practiceItem);function practiceItem(props){var _this;_classCallCheck(this,practiceItem);_this=_super.call(this,props);_this.state={};return _this;}// 组件第一次存在dom中时候函数不会执行\n// 如果已经存在dom中或者dom发生变化时候，函数才会执行\n// 类似vue中的子组件，在更新数据的时候才会执行（个人理解）\n// componentWillReceiveProps () {\n//   console.log('child-componentWillReceiveProps-----')\n// }\n// // 删除dom的时候会执行\n// componentWillUnmount () {\n//   console.log('child-componentWillUnmount-----')\n// }\n// 解决性能问题，子组件会一直渲染。需要调节判定\n_createClass(practiceItem,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){// console.log('shouldComponentUpdate-----组件更新之前  1')\nif(nextProps.content!==this.props.content){return true;}else{return false;}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"li\",{className:\"li\",children:[this.props.content.name,\" - \",this.props.content.author,\" - \",this.props.content.publish,\" - \",this.props.content.price,\" - \",this.props.pages,/*#__PURE__*/_jsx(Button,{className:\"delete\",value:\"small\",type:\"danger\",onClick:function onClick(){_this2.props.delItem();},children:\"\\u5220\\u9664\"})]});}}]);return practiceItem;}(Component);// 参数默认值\npracticeItem.defaultProps={pages:100};// 校验参数和是否必须\nexport default practiceItem;","map":{"version":3,"sources":["/Users/gaber/Documents/练习/project2/reacttest/src/pages/practice/component/practiceItem.js"],"names":["React","Component","Button","practiceItem","props","state","nextProps","nextState","content","name","author","publish","price","pages","delItem","defaultProps"],"mappings":"oqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,MAAT,KAAuB,MAAvB,C,2FACMC,CAAAA,Y,4GACJ,sBAAYC,KAAZ,CAAmB,8CACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,EAAb,CAFiB,aAGlB,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;8DACA,+BAAsBC,SAAtB,CAAiCC,SAAjC,CAA4C,CAC1C;AACA,GAAID,SAAS,CAACE,OAAV,GAAsB,KAAKJ,KAAL,CAAWI,OAArC,CAA8C,CAC5C,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAO,MAAP,CACD,CACF,C,sBAED,iBAAS,iBACP,mBACE,YAAI,SAAS,CAAC,IAAd,WACG,KAAKJ,KAAL,CAAWI,OAAX,CAAmBC,IADtB,OAC+B,KAAKL,KAAL,CAAWI,OAAX,CAAmBE,MADlD,OAC6D,KAAKN,KAAL,CAAWI,OAAX,CAAmBG,OADhF,OAC4F,KAAKP,KAAL,CAAWI,OAAX,CAAmBI,KAD/G,OACyH,KAAKR,KAAL,CAAWS,KADpI,cAEE,KAAC,MAAD,EACE,SAAS,CAAC,QADZ,CAEE,KAAK,CAAC,OAFR,CAGE,IAAI,CAAC,QAHP,CAIE,OAAO,CAAE,kBAAM,CACb,MAAI,CAACT,KAAL,CAAWU,OAAX,GACD,CANH,0BAFF,GADF,CAeD,C,0BA5CwBb,S,EA+C3B;AACAE,YAAY,CAACY,YAAb,CAA4B,CAC1BF,KAAK,CAAE,GADmB,CAA5B,CAIA;AAQA,cAAeV,CAAAA,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Button } from \"antd\";\nclass practiceItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // 组件第一次存在dom中时候函数不会执行\n  // 如果已经存在dom中或者dom发生变化时候，函数才会执行\n  // 类似vue中的子组件，在更新数据的时候才会执行（个人理解）\n  // componentWillReceiveProps () {\n  //   console.log('child-componentWillReceiveProps-----')\n  // }\n\n  // // 删除dom的时候会执行\n  // componentWillUnmount () {\n  //   console.log('child-componentWillUnmount-----')\n  // }\n\n  // 解决性能问题，子组件会一直渲染。需要调节判定\n  shouldComponentUpdate(nextProps, nextState) {\n    // console.log('shouldComponentUpdate-----组件更新之前  1')\n    if (nextProps.content !== this.props.content) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <li className=\"li\">\n        {this.props.content.name} - {this.props.content.author} - {this.props.content.publish} - {this.props.content.price} - {this.props.pages}\n        <Button\n          className=\"delete\"\n          value=\"small\"\n          type=\"danger\"\n          onClick={() => {\n            this.props.delItem();\n          }}\n        >\n          删除\n        </Button>\n      </li>\n    );\n  }\n}\n\n// 参数默认值\npracticeItem.defaultProps = {\n  pages: 100,\n};\n\n// 校验参数和是否必须\npracticeItem.propTypes = {\n  name: propTypes.string.isRequired,\n  content: propTypes.object,\n  index: propTypes.number,\n  delItem: propTypes.func,\n};\n\nexport default practiceItem;\n"]},"metadata":{},"sourceType":"module"}