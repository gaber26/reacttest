{"ast":null,"code":"var _jsxFileName = \"/Users/gaber/Documents/\\u7EC3\\u4E60/react-demo/src/pages/book/index.js\";\nimport \"./index.css\";\nimport React from \"react\";\nimport { articleList } from \"../../lib/api\";\nimport { Table, Input } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst columns = [{\n  title: \"ID\",\n  dataIndex: \"id\",\n  key: \"id\"\n}, {\n  title: \"书名\",\n  dataIndex: \"name\",\n  key: \"name\"\n}, {\n  title: \"作者\",\n  dataIndex: \"author\",\n  key: \"author\"\n}, {\n  title: \"价格\",\n  dataIndex: \"price\",\n  key: \"price\"\n}];\n\nconst onSearch = value => {\n  console.log(value);\n};\n\nclass Index extends React.Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n\n    this.state = {\n      dataSource: [],\n      // 当前页\n      current: 1,\n      // 每页显示\n      size: 5,\n      // 总条数\n      total: 0,\n      //是否点击跳转\n      showQuickJumper: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"input search text\",\n          allowClear: true,\n          enterButton: \"Search\",\n          size: \"large\",\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        rowKey: \"id\",\n        bordered: true,\n        dataSource: this.state.dataSource,\n        columns: columns,\n        pagination: this.fenye()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n    this.getBook(this.state.current, this.state.size); //获取列表接口\n  } //分页\n\n\n  fenye() {\n    const fy = {\n      // 当前页\n      current: this.state.current,\n      // 每页显示\n      pageSize: this.state.size,\n      // 总条数\n      total: this.state.total,\n      // 点击下一页\n      onChange: current => {\n        this.getBook(current, 5);\n        this.setState({\n          current: this.state.current\n        });\n      },\n      // 每页显示变化\n      // onShowSizeChange: (Current, pageSize) => {\n      //   console.log(pageSize);\n      //   this.getBook(Current, pageSize);\n      // },\n      //是否可以跳转\n      showQuickJumper: this.state.showQuickJumper\n    };\n    return fy;\n  }\n\n  async getBook(current, size) {\n    let res = await articleList({\n      current: current,\n      size: size\n    });\n    console.log(33, res.content);\n\n    if (res.content.length) {\n      this.setState({\n        dataSource: res.content,\n        total: res.totalElements\n      });\n    }\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/gaber/Documents/练习/react-demo/src/pages/book/index.js"],"names":["React","articleList","Table","Input","Search","columns","title","dataIndex","key","onSearch","value","console","log","Index","Component","constructor","props","state","dataSource","current","size","total","showQuickJumper","render","fenye","componentDidMount","getBook","fy","pageSize","onChange","setState","res","content","length","totalElements"],"mappings":"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","sourcesContent":["import \"./index.css\";\nimport React from \"react\";\nimport { articleList } from \"../../lib/api\";\nimport { Table, Input } from \"antd\";\nconst { Search } = Input;\nconst columns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: \"书名\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"作者\",\n    dataIndex: \"author\",\n    key: \"author\",\n  },\n  {\n    title: \"价格\",\n    dataIndex: \"price\",\n    key: \"price\",\n  },\n];\n\nconst onSearch = (value) => {\n  console.log(value);\n};\nclass Index extends React.Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n    this.state = {\n      dataSource: [],\n      // 当前页\n      current: 1,\n      // 每页显示\n      size: 5,\n      // 总条数\n      total: 0,\n      //是否点击跳转\n      showQuickJumper: true,\n    };\n  }\n  render() {\n    return (\n      <div>\n        {/* 表头 */}\n        <div className=\"search\">\n          <Search placeholder=\"input search text\" allowClear enterButton=\"Search\" size=\"large\" onSearch={onSearch} />\n        </div>\n\n        <Table rowKey=\"id\" bordered dataSource={this.state.dataSource} columns={columns} pagination={this.fenye()} />\n      </div>\n    );\n  }\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n    this.getBook(this.state.current, this.state.size); //获取列表接口\n  }\n  //分页\n\n  fenye() {\n    const fy = {\n      // 当前页\n      current: this.state.current,\n      // 每页显示\n      pageSize: this.state.size,\n      // 总条数\n      total: this.state.total,\n      // 点击下一页\n      onChange: (current) => {\n        this.getBook(current, 5)\n        this.setState({\n          current: this.state.current\n        })\n      },\n      // 每页显示变化\n      // onShowSizeChange: (Current, pageSize) => {\n      //   console.log(pageSize);\n      //   this.getBook(Current, pageSize);\n      // },\n      //是否可以跳转\n      showQuickJumper: this.state.showQuickJumper,\n    };\n\n    return fy;\n  }\n  async getBook(current, size) {\n    let res = await articleList({ current: current, size: size });\n    console.log(33, res.content);\n    if (res.content.length) {\n      this.setState({\n        dataSource: res.content,\n        total: res.totalElements,\n        \n      });\n    }\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}