{"ast":null,"code":"var _jsxFileName = \"/Users/gaber/Documents/\\u7EC3\\u4E60/react-demo/src/pages/practice/component/practiceItem.js\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass practiceItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // 组件第一次存在dom中时候函数不会执行\n  // 如果已经存在dom中或者dom发生变化时候，函数才会执行\n  // 类似vue中的子组件，在更新数据的时候才会执行（个人理解）\n  // componentWillReceiveProps () {\n  //   console.log('child-componentWillReceiveProps-----')\n  // }\n  // // 删除dom的时候会执行\n  // componentWillUnmount () {\n  //   console.log('child-componentWillUnmount-----')\n  // }\n  // 解决性能问题，子组件会一直渲染。需要调节判定\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // console.log('shouldComponentUpdate-----组件更新之前  1')\n    if (nextProps.content !== this.props.content) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    console.log('====================================');\n    console.log(this.props);\n    console.log('====================================');\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"li\",\n      children: [this.props.content.name, \" - \", this.props.content.age, \" - \", this.props.content.address, \" - \", this.props.sex, /*#__PURE__*/_jsxDEV(Button, {\n        className: \"delete\",\n        value: \"small\",\n        type: \"danger\",\n        onClick: () => {\n          this.props.delItem();\n        },\n        children: \"\\u5220\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 参数默认值\n\n\npracticeItem.defaultProps = {\n  sex: '男'\n}; // 校验参数和是否必须\n\npracticeItem.propTypes = {\n  name: propTypes.string.isRequired,\n  content: propTypes.object,\n  index: propTypes.number,\n  delItem: propTypes.func\n};\nexport default practiceItem;","map":{"version":3,"sources":["/Users/gaber/Documents/练习/react-demo/src/pages/practice/component/practiceItem.js"],"names":["React","Component","propTypes","Button","practiceItem","constructor","props","state","shouldComponentUpdate","nextProps","nextState","content","render","console","log","name","age","address","sex","delItem","defaultProps","string","isRequired","object","index","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;;;AACA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGD,GANkC,CAQnC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AACAC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C;AACA,QAAID,SAAS,CAACE,OAAV,KAAsB,KAAKL,KAAL,CAAWK,OAArC,EAA8C;AAC5C,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,wBACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA,iBACG,KAAKR,KAAL,CAAWK,OAAX,CAAmBI,IADtB,SAC+B,KAAKT,KAAL,CAAWK,OAAX,CAAmBK,GADlD,SAC0D,KAAKV,KAAL,CAAWK,OAAX,CAAmBM,OAD7E,SACyF,KAAKX,KAAL,CAAWY,GADpG,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,KAAK,EAAC,OAAjC;AAAyC,QAAA,IAAI,EAAC,QAA9C;AAAuD,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKZ,KAAL,CAAWa,OAAX;AAAsB,SAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxCkC,C,CA2CrC;;;AACAf,YAAY,CAACgB,YAAb,GAA4B;AAC1BF,EAAAA,GAAG,EAAE;AADqB,CAA5B,C,CAIA;;AACAd,YAAY,CAACF,SAAb,GAAyB;AACvBa,EAAAA,IAAI,EAAEb,SAAS,CAACmB,MAAV,CAAiBC,UADA;AAEvBX,EAAAA,OAAO,EAAET,SAAS,CAACqB,MAFI;AAGvBC,EAAAA,KAAK,EAAEtB,SAAS,CAACuB,MAHM;AAIvBN,EAAAA,OAAO,EAAEjB,SAAS,CAACwB;AAJI,CAAzB;AAOA,eAAetB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Button } from 'antd'\nclass practiceItem extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  // 组件第一次存在dom中时候函数不会执行\n  // 如果已经存在dom中或者dom发生变化时候，函数才会执行\n  // 类似vue中的子组件，在更新数据的时候才会执行（个人理解）\n  // componentWillReceiveProps () {\n  //   console.log('child-componentWillReceiveProps-----')\n  // }\n\n  // // 删除dom的时候会执行\n  // componentWillUnmount () {\n  //   console.log('child-componentWillUnmount-----')\n  // }\n\n  // 解决性能问题，子组件会一直渲染。需要调节判定\n  shouldComponentUpdate(nextProps, nextState) {\n    // console.log('shouldComponentUpdate-----组件更新之前  1')\n    if (nextProps.content !== this.props.content) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  render() {\n    console.log('====================================');\n    console.log(this.props);\n    console.log('====================================');\n    return (\n      <li className=\"li\">\n        {this.props.content.name} - {this.props.content.age} - {this.props.content.address} - {this.props.sex}\n        <Button className=\"delete\" value=\"small\" type=\"danger\" onClick={() => { this.props.delItem() }}>删除</Button>\n      </li>\n    );\n  }\n}\n\n// 参数默认值\npracticeItem.defaultProps = {\n  sex: '男'\n}\n\n// 校验参数和是否必须\npracticeItem.propTypes = {\n  name: propTypes.string.isRequired,\n  content: propTypes.object,\n  index: propTypes.number,\n  delItem: propTypes.func\n}\n\nexport default practiceItem;"]},"metadata":{},"sourceType":"module"}