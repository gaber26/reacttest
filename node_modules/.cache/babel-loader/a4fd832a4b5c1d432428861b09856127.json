{"ast":null,"code":"var _jsxFileName = \"/Users/gaber/Documents/\\u7EC3\\u4E60/react-demo/src/pages/todolist/index.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport store from '../../store/index';\nimport { connect } from 'react-redux';\nimport { Input, Button, List } from 'antd';\nimport { inputValueChangeA, addBtnA, delBtnA, getListA } from '../../store/actions';\nimport * as Types from '../../store/actionTypes';\nimport { articleList } from '../../lib/api';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  render() {\n    let {\n      inputValue,\n      inputValueChange,\n      addBtn,\n      rows,\n      delBtn\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: inputValue,\n          style: {\n            width: '250px'\n          },\n          onChange: e => {\n            inputValueChange(e);\n          },\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => {\n            addBtn();\n          },\n          children: \"\\u589E\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoList-list\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          dataSource: rows,\n          renderItem: (item, index) => /*#__PURE__*/_jsxDEV(List.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: '/todoListDetail',\n                params: item\n              },\n              children: [index + 1, \"\\u3001\", item.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: () => {\n                delBtn(index);\n              },\n              children: \"\\u5220\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {}\n\n} // 属性交互store\n\n\nconst stateToProps = state => {\n  return {\n    inputValue: state.inputValue,\n    rows: state.rows\n  };\n}; // 方法交互store\n\n\nconst dispatchToProps = dispatch => {\n  return {\n    inputValueChange(e) {\n      const action = inputValueChangeA({\n        value: e.target.value\n      }); // store.dispatch(action)\n    },\n\n    addBtn() {// const action = addBtnA()\n      // store.dispatch(action)\n    },\n\n    delBtn(index) {\n      const action = delBtnA({\n        value: index\n      });\n      store.dispatch(action);\n    }\n\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/gaber/Documents/练习/react-demo/src/pages/todolist/index.js"],"names":["React","Component","Link","Redirect","store","connect","Input","Button","List","inputValueChangeA","addBtnA","delBtnA","getListA","Types","articleList","TodoList","render","inputValue","inputValueChange","addBtn","rows","delBtn","props","width","e","item","index","pathname","params","title","componentDidMount","stateToProps","state","dispatchToProps","dispatch","action","value","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom'\nimport store from '../../store/index'\nimport { connect } from 'react-redux'\nimport { Input, Button, List } from 'antd'\nimport { inputValueChangeA, addBtnA, delBtnA, getListA } from '../../store/actions'\nimport * as Types from '../../store/actionTypes'\nimport { articleList } from '../../lib/api'\nimport './index.scss';\n\nclass TodoList extends Component {\n  render() {\n    let { inputValue, inputValueChange, addBtn, rows, delBtn } = this.props\n    return (\n      <div className=\"todoList\">\n        {/* 重定向 */}\n        {/* <Redirect to=\"/\" /> */}\n        <div>\n          <Input\n            placeholder={inputValue}\n            style={{ width: '250px' }}\n            onChange={(e) => { inputValueChange(e) }}\n            value={inputValue}\n          ></Input>\n          <Button type=\"primary\" onClick={() => { addBtn() }}>增加</Button>\n        </div>\n        <div className=\"todoList-list\">\n          <List\n            dataSource={rows}\n            renderItem={(item, index) => (\n              <List.Item>\n                <Link to={{ pathname: '/todoListDetail', params: item }}>{index + 1}、{item.title}</Link>\n                <Button type=\"danger\" onClick={() => { delBtn(index) }}>删除</Button>\n              </List.Item>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n  }\n}\n\n// 属性交互store\nconst stateToProps = (state) => {\n  return {\n    inputValue: state.inputValue,\n    rows: state.rows,\n  }\n}\n\n// 方法交互store\nconst dispatchToProps = (dispatch) => {\n  return {\n    inputValueChange(e) {\n      const action = inputValueChangeA({\n        value: e.target.value\n      })\n      // store.dispatch(action)\n    },\n    addBtn() {\n      // const action = addBtnA()\n      // store.dispatch(action)\n    },\n    delBtn(index) {\n      const action = delBtnA({\n        value: index\n      })\n      store.dispatch(action)\n    }\n  }\n}\n\nexport default connect(stateToProps, dispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}