{"ast":null,"code":"var _jsxFileName = \"/Users/gaber/Documents/\\u7EC3\\u4E60/react-demo/src/pages/practice/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./index.scss\";\nimport PracticeItem from \"./component/practiceItem\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 2\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 2,\n    span: 8\n  }\n};\n\nclass Practice extends Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n\n    this.state = {\n      name: \"\",\n      age: \"\",\n      address: \"\",\n      list: []\n    };\n  } // componentWillMount () {\n  //   console.log('componentWillMount-----组件将要挂载到页面的时候')\n  // }\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   console.log('shouldComponentUpdate-----组件更新之前  1')\n  //   return true\n  // }\n  // componentWillUpdate () {\n  //   console.log('componentWillUpdate-----组件更新之前  2')\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n          name: \"basic\",\n          initialValues: {\n            remember: true\n          },\n          onFinish: () => this.onFinish(),\n          onFinishFailed: this.onFinishFailed,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u59D3\\u540D\",\n            name: \"name\",\n            rules: [{\n              required: true,\n              message: '请输入用户名'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u5E74\\u9F84\",\n            name: \"age\",\n            rules: [{\n              required: true,\n              message: '请输入年龄'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u5730\\u5740\",\n            name: \"address\",\n            rules: [{\n              required: true,\n              message: '请输入地址'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"\\u65B0\\u589E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: ul => {\n          this.ulDom = ul;\n        },\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          children: this.state.list.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(CSSTransition, {\n              timeout: 10,\n              unmountOnExit: true,\n              appear: true,\n              children: /*#__PURE__*/_jsxDEV(PracticeItem, {\n                content: item,\n                index: index,\n                delItem: () => {\n                  this.delItem(index);\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate-----所有挂载完毕执行   4\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n  }\n\n  onFinish(values) {\n    console.log('====================================');\n    console.log(values, this);\n    console.log('====================================');\n    let arr = []; // console.log('Success:', values, this);\n\n    arr.push(values);\n    this.setState({\n      list: [values],\n      name: \"\",\n      age: \"\",\n      address: \"\"\n    });\n  }\n\n  onFinishFailed(errorInfo) {\n    console.log('Failed:', errorInfo);\n  }\n\n  //新增\n  addClick() {\n    if (!this.state.name) return;\n    this.setState({\n      list: [{\n        name: this.state.name,\n        age: this.state.age,\n        address: this.state.address\n      }],\n      name: \"\",\n      age: \"\",\n      address: \"\"\n    }, () => {\n      console.log(this.ulDom.querySelectorAll(\"li\").length);\n    });\n  } //删除\n\n\n  delItem(index) {\n    // 数据操作必须重新赋值操作，不能直接改变state里面的数据\n    let list = this.state.list;\n    list.splice(index, 1);\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      list: list\n    });\n  }\n\n}\n\nexport default Practice;","map":{"version":3,"sources":["/Users/gaber/Documents/练习/react-demo/src/pages/practice/index.js"],"names":["React","Component","Fragment","PracticeItem","CSSTransition","TransitionGroup","Form","Input","Button","Checkbox","layout","labelCol","span","wrapperCol","tailLayout","offset","Practice","constructor","props","state","name","age","address","list","render","remember","onFinish","onFinishFailed","required","message","ul","ulDom","map","item","index","delItem","componentDidUpdate","console","log","componentDidMount","values","arr","push","setState","errorInfo","addClick","querySelectorAll","length","splice"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport \"./index.scss\";\nimport PracticeItem from \"./component/practiceItem\";\n\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 2,\n    span: 8,\n  },\n};\n\nclass Practice extends Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n    this.state = {\n      name: \"\",\n      age: \"\",\n      address: \"\",\n      list: [],\n    };\n  }\n\n  // componentWillMount () {\n  //   console.log('componentWillMount-----组件将要挂载到页面的时候')\n  // }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   console.log('shouldComponentUpdate-----组件更新之前  1')\n  //   return true\n  // }\n\n  // componentWillUpdate () {\n  //   console.log('componentWillUpdate-----组件更新之前  2')\n  // }\n\n  render() {\n    return (\n      <Fragment>\n        {/* 外层类似vue必须加一层盒子，但是加了这个就可以不用增加额外盒子 */}\n        {/* 绑定事件必须要.bind(this)进去，或者使用箭头函数，不然无法找到this */}\n        <div>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={()=>this.onFinish()}\n            onFinishFailed={this.onFinishFailed}\n          >\n            <Form.Item\n              label=\"姓名\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入用户名',\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"年龄\"\n              name=\"age\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入年龄',\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"地址\"\n              name=\"address\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入地址',\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                新增\n        </Button>\n            </Form.Item>\n          </Form>\n\n          {/* <label htmlFor=\"input\">名字</label>\n          <input\n            id=\"input\"\n            value={this.state.name}\n            onChange={(e) => {\n              this.nameChange(e);\n            }}\n          />\n          <label htmlFor=\"input\">年龄</label>\n          <input\n            id=\"input\"\n            value={this.state.age}\n            onChange={(e) => {\n              this.ageChange(e);\n            }}\n          />\n          <label htmlFor=\"input\">地址</label>\n          <input\n            id=\"input\"\n            value={this.state.address}\n            onChange={(e) => {\n              this.addressChange(e);\n            }}\n          />\n          <Button\n            value=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              this.addClick();\n            }}\n          >\n            增加\n          </Button> */}\n        </div>\n        <ul\n          ref={(ul) => {\n            this.ulDom = ul;\n          }}\n        >\n          <TransitionGroup>\n            {this.state.list.map((item, index) => {\n              return (\n                <CSSTransition timeout={10} unmountOnExit appear={true} key={index}>\n                  <PracticeItem\n                    key={index}\n                    content={item}\n                    index={index}\n                    delItem={() => {\n                      this.delItem(index);\n                    }}\n                  />\n                </CSSTransition>\n              );\n            })}\n          </TransitionGroup>\n        </ul>\n      </Fragment>\n    );\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate-----所有挂载完毕执行   4\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n  }\n  onFinish(values) {\n    console.log('====================================');\n    console.log(values, this);\n    console.log('====================================');\n    let arr = [];\n    // console.log('Success:', values, this);\n    arr.push(values);\n    this.setState(\n      {\n        list: [values],\n        name: \"\",\n        age: \"\",\n        address: \"\"\n      },\n    )\n  };\n\n  onFinishFailed(errorInfo) {\n    console.log('Failed:', errorInfo);\n  };\n  //新增\n  addClick() {\n    if (!this.state.name) return;\n    this.setState(\n      {\n        list: [{ name: this.state.name, age: this.state.age, address: this.state.address }],\n        name: \"\",\n        age: \"\",\n        address: \"\"\n      },\n      () => {\n        console.log(this.ulDom.querySelectorAll(\"li\").length);\n      }\n    );\n  }\n  //删除\n  delItem(index) {\n    // 数据操作必须重新赋值操作，不能直接改变state里面的数据\n    let list = this.state.list;\n    list.splice(index, 1);\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      list: list,\n    });\n  }\n}\n\nexport default Practice;\n"]},"metadata":{},"sourceType":"module"}