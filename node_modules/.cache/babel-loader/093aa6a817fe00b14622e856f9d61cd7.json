{"ast":null,"code":"var _jsxFileName = \"/Users/gaber/Documents/\\u7EC3\\u4E60/react-demo/src/pages/practice/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./index.scss\";\nimport PracticeItem from \"./component/practiceItem\";\nimport { Button } from \"antd\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Xiaojiejie extends Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n\n    this.state = {\n      name: \"\",\n      age: \"\",\n      address: \"\",\n      list: [],\n      articleListInfo: []\n    };\n  } // componentWillMount () {\n  //   console.log('componentWillMount-----组件将要挂载到页面的时候')\n  // }\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   console.log('shouldComponentUpdate-----组件更新之前  1')\n  //   return true\n  // }\n  // componentWillUpdate () {\n  //   console.log('componentWillUpdate-----组件更新之前  2')\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input\",\n          children: \"\\u540D\\u5B57\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          value: this.state.name,\n          onChange: e => {\n            this.inputChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input\",\n          children: \"\\u5E74\\u9F84\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          value: this.state.name,\n          onChange: e => {\n            this.inputChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input\",\n          children: \"\\u5730\\u5740\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          value: this.state.name,\n          onChange: e => {\n            this.inputChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: \"small\",\n          type: \"primary\",\n          onClick: () => {\n            this.addClick();\n          },\n          children: \"\\u589E\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: ul => {\n          this.ulDom = ul;\n        },\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          children: this.state.list.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(CSSTransition, {\n              timeout: 10,\n              unmountOnExit: true,\n              appear: true,\n              children: /*#__PURE__*/_jsxDEV(PracticeItem, {\n                content: item,\n                index: index,\n                delItem: () => {\n                  this.delItem(index);\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate-----所有挂载完毕执行   4\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n  }\n\n  inputChange(e) {\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      name: e.target.value\n    });\n  } //新增\n\n\n  addClick() {\n    if (!this.state.name) return;\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      list: [...this.state.list, this.state.name],\n      name: \"\"\n    }, () => {\n      console.log(this.ulDom.querySelectorAll(\"li\").length);\n    });\n    debugger;\n    console.log(\"====================================\");\n    console.log(...this.state.list, this.state.name, [...this.state.list]);\n    console.log(\"====================================\");\n  } //删除\n\n\n  delItem(index) {\n    // 数据操作必须重新赋值操作，不能直接改变state里面的数据\n    let list = this.state.list;\n    list.splice(index, 1);\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      list: list\n    });\n  }\n\n}\n\nexport default Xiaojiejie;","map":{"version":3,"sources":["/Users/gaber/Documents/练习/react-demo/src/pages/practice/index.js"],"names":["React","Component","Fragment","PracticeItem","Button","CSSTransition","TransitionGroup","Xiaojiejie","constructor","props","state","name","age","address","list","articleListInfo","render","e","inputChange","addClick","ul","ulDom","map","item","index","delItem","componentDidUpdate","console","log","componentDidMount","setState","target","value","querySelectorAll","length","splice"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport \"./index.scss\";\nimport PracticeItem from \"./component/practiceItem\";\nimport { Button } from \"antd\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass Xiaojiejie extends Component {\n  // 类名  继承  react组件\n  constructor(props) {\n    // 构造\n    super(props); // 调用父级方法\n    this.state = {\n      name: \"\",\n      age: \"\",\n      address: \"\",\n      list: [],\n      articleListInfo: [],\n    };\n  }\n\n  // componentWillMount () {\n  //   console.log('componentWillMount-----组件将要挂载到页面的时候')\n  // }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   console.log('shouldComponentUpdate-----组件更新之前  1')\n  //   return true\n  // }\n\n  // componentWillUpdate () {\n  //   console.log('componentWillUpdate-----组件更新之前  2')\n  // }\n\n  render() {\n    return (\n      <Fragment>\n        {/* 外层类似vue必须加一层盒子，但是加了这个就可以不用增加额外盒子 */}\n        {/* 绑定事件必须要.bind(this)进去，或者使用箭头函数，不然无法找到this */}\n        <div>\n          <label htmlFor=\"input\">名字</label>\n          <input\n            id=\"input\"\n            value={this.state.name}\n            onChange={(e) => {\n              this.inputChange(e);\n            }}\n          />\n          <label htmlFor=\"input\">年龄</label>\n          <input\n            id=\"input\"\n            value={this.state.name}\n            onChange={(e) => {\n              this.inputChange(e);\n            }}\n          />\n          <label htmlFor=\"input\">地址</label>\n          <input\n            id=\"input\"\n            value={this.state.name}\n            onChange={(e) => {\n              this.inputChange(e);\n            }}\n          />\n          <Button\n            value=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              this.addClick();\n            }}\n          >\n            增加\n          </Button>\n        </div>\n        <ul\n          ref={(ul) => {\n            this.ulDom = ul;\n          }}\n        >\n          <TransitionGroup>\n            {this.state.list.map((item, index) => {\n              return (\n                <CSSTransition timeout={10} unmountOnExit appear={true} key={index}>\n                  <PracticeItem\n                    key={index}\n                    content={item}\n                    index={index}\n                    delItem={() => {\n                      this.delItem(index);\n                    }}\n                  />\n                </CSSTransition>\n              );\n            })}\n          </TransitionGroup>\n        </ul>\n      </Fragment>\n    );\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate-----所有挂载完毕执行   4\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount-----组件已经挂载到页面的时候\");\n  }\n\n  inputChange(e) {\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      name: e.target.value,\n    });\n  }\n  //新增\n  addClick() {\n    if (!this.state.name) return;\n    this.setState(\n      {\n        // react单向流，需要绑定原始数据变化\n        list: [...this.state.list, this.state.name],\n        name: \"\",\n      },\n      () => {\n        console.log(this.ulDom.querySelectorAll(\"li\").length);\n      }\n    );\n    debugger;\n    console.log(\"====================================\");\n    console.log(...this.state.list, this.state.name, [...this.state.list]);\n    console.log(\"====================================\");\n  }\n  //删除\n  delItem(index) {\n    // 数据操作必须重新赋值操作，不能直接改变state里面的数据\n    let list = this.state.list;\n    list.splice(index, 1);\n    this.setState({\n      // react单向流，需要绑定原始数据变化\n      list: list,\n    });\n  }\n}\n\nexport default Xiaojiejie;\n"]},"metadata":{},"sourceType":"module"}