{"ast":null,"code":"import axios from'axios';import qs from'qs';export default(function(){var url=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var contentType=arguments.length>3?arguments[3]:undefined;var timeout=arguments.length>4?arguments[4]:undefined;var resType=arguments.length>5?arguments[5]:undefined;return new Promise(function(resolve,reject){var requestConfig={method:type,url:url,headers:{'Accept':'application/json','Content-Type':contentType?contentType:'application/json'},timeout:timeout?timeout:180000,responseType:resType?resType:'json'};switch(type.toUpperCase()){case\"GET\":requestConfig.params=data;requestConfig.paramsSerializer=function(params){return qs.stringify(params,{indices:false});};break;case\"DELETE\":requestConfig.params=data;break;case\"POST\":requestConfig.data=data;break;case\"PUT\":requestConfig.data=data;break;default:requestConfig.data=data;}if((type==='POST'||type==='PUT')&&contentType!=='multipart/form-data'){requestConfig.data=contentType?qs.stringify(data):JSON.stringify(data);}axios(requestConfig).then(function(resp){if(resp){resolve(resp);}else{return;}}).catch(function(err){reject(err);});});});","map":{"version":3,"sources":["/Users/gaber/Documents/练习/project2/reacttest/src/lib/http.js"],"names":["axios","qs","url","data","type","contentType","timeout","resType","Promise","resolve","reject","requestConfig","method","headers","responseType","toUpperCase","params","paramsSerializer","stringify","indices","JSON","then","resp","catch","err"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,EAAP,KAAe,IAAf,CAGA,eAAe,UAAsE,IAArEC,CAAAA,GAAqE,2DAA/D,EAA+D,IAA3DC,CAAAA,IAA2D,2DAApD,EAAoD,IAAhDC,CAAAA,IAAgD,2DAAzC,KAAyC,IAAlCC,CAAAA,WAAkC,8CAArBC,CAAAA,OAAqB,8CAAZC,CAAAA,OAAY,2CACnF,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC,GAAIC,CAAAA,aAAa,CAAG,CAClBC,MAAM,CAAER,IADU,CAElBF,GAAG,CAAEA,GAFa,CAGlBW,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgBR,WAAW,CAAGA,WAAH,CAAiB,kBAFrC,CAHS,CAOlBC,OAAO,CAAEA,OAAO,CAAGA,OAAH,CAAa,MAPX,CAQlBQ,YAAY,CAAEP,OAAO,CAAGA,OAAH,CAAa,MARhB,CAApB,CAWA,OAAQH,IAAI,CAACW,WAAL,EAAR,EACE,IAAK,KAAL,CACEJ,aAAa,CAACK,MAAd,CAAuBb,IAAvB,CACAQ,aAAa,CAACM,gBAAd,CAAiC,SAAAD,MAAM,CAAI,CACzC,MAAOf,CAAAA,EAAE,CAACiB,SAAH,CAAaF,MAAb,CAAqB,CAC1BG,OAAO,CAAE,KADiB,CAArB,CAAP,CAGD,CAJD,CAKA,MACF,IAAK,QAAL,CACER,aAAa,CAACK,MAAd,CAAuBb,IAAvB,CACA,MACF,IAAK,MAAL,CACEQ,aAAa,CAACR,IAAd,CAAqBA,IAArB,CACA,MACF,IAAK,KAAL,CACEQ,aAAa,CAACR,IAAd,CAAqBA,IAArB,CACA,MACF,QACEQ,aAAa,CAACR,IAAd,CAAqBA,IAArB,CAnBJ,CAsBA,GAAI,CAACC,IAAI,GAAK,MAAT,EAAmBA,IAAI,GAAK,KAA7B,GAAuCC,WAAW,GAAK,qBAA3D,CAAkF,CAChFM,aAAa,CAACR,IAAd,CAAqBE,WAAW,CAAGJ,EAAE,CAACiB,SAAH,CAAaf,IAAb,CAAH,CAAwBiB,IAAI,CAACF,SAAL,CAAef,IAAf,CAAxD,CACD,CAEDH,KAAK,CAACW,aAAD,CAAL,CAAqBU,IAArB,CAA0B,SAACC,IAAD,CAAU,CAClC,GAAIA,IAAJ,CAAU,CACRb,OAAO,CAACa,IAAD,CAAP,CACD,CAFD,IAEO,CACL,OACD,CACF,CAND,EAMGC,KANH,CAMS,SAACC,GAAD,CAAS,CAChBd,MAAM,CAACc,GAAD,CAAN,CACD,CARD,EASD,CA/CM,CAAP,CAgDD,CAjDD","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\n\n\nexport default (url = '', data = {}, type = 'GET', contentType, timeout, resType) => {\n  return new Promise((resolve, reject) => {\n    let requestConfig = {\n      method: type,\n      url: url,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': contentType ? contentType : 'application/json'\n      },\n      timeout: timeout ? timeout : 180000,\n      responseType: resType ? resType : 'json',\n    };\n\n    switch (type.toUpperCase()) {\n      case \"GET\":\n        requestConfig.params = data;\n        requestConfig.paramsSerializer = params => {\n          return qs.stringify(params, {\n            indices: false\n          })\n        };\n        break;\n      case \"DELETE\":\n        requestConfig.params = data;\n        break;\n      case \"POST\":\n        requestConfig.data = data;\n        break;\n      case \"PUT\":\n        requestConfig.data = data;\n        break;\n      default:\n        requestConfig.data = data;\n    }\n\n    if ((type === 'POST' || type === 'PUT') && contentType !== 'multipart/form-data') {\n      requestConfig.data = contentType ? qs.stringify(data) : JSON.stringify(data);\n    }\n\n    axios(requestConfig).then((resp) => {\n      if (resp) {\n        resolve(resp);\n      } else {\n        return\n      }\n    }).catch((err) => {\n      reject(err);\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}